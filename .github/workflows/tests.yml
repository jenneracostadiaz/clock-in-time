name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [8.3]
    
    name: Tests
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: dependencies-php-composer-${{ hashFiles('composer.lock') }}
    
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: json, dom, curl, libxml, mbstring, zip
          tools: composer:v2
          coverage: xdebug

      - name: Set up Node & NPM
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Setup Problem Matches
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install PHP Dependencies
        #run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        run: composer install --no-interaction --no-progress --ansi
    
      - name: Get NPM cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Set up Bun.sh
        uses: oven-sh/setup-bun@v2

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: bun install

      - name: Build dependencies
        run: bun run build

      - name: Prepare Laravel
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    
      - name: Generate key
        run: php artisan key:generate
      
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      
      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test
